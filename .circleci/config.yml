version: 2

environment:
  GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1
  # This must be set in a job, either explicitly using bash or from a script.
  # If it is not set, the deploy scripts will NOT execute.
  DEPLOY_TYPE: None

################################################################################
#                                                                              #
# YAML Aliases for our Circle-CI configuration.                                #
#                                                                              #
################################################################################

job_defaults: &job_defaults
  working_directory: ~/ci
  docker:
    - image: circleci/python:3.6.4

master_only: &master_only
  filters:
    branches:
      only:
        - master

ignnore_master: &ignore_master
  filters:
    branches:
      ignore:
        - master

python_deps_cache_key: &python_deps_cache_key
  key: {{ checksum "pyproject.toml" }}-v1

pip_cache_key: & pip_cache_key
  key: pip-cache-v1

################################################################################
#                                                                              #
# Circle-CI Command definitions.                                               #
#                                                                              #
################################################################################

commands:
  job_setup:
    description: Prepare the workspace and venv for job execution.
    steps:
      - attach_workspace:
          - at: "/home/circleci"

      - run:
          name: Prepend VirtualEnv to $PATH
          command: echo 'export PATH=/home/circleci/ci/venv/bin:$PATH' >> ${BASH_ENV}

  lint:
    description: Execute linters
    steps:
      - run:
          name: Run Linters
          command: |
            cd ~/ci/bitex
            tox -e lint

  unit_tests:
    description: Run unittests.
    steps:
      - run:
          name: Run tests
          command: |
            tox -e unit-test

  integration_tests:
    description: Run integration tests
    steps:
      - run:
          name: Run tests
          command: |
            tox -e integration-tests

  restore_project_caches:
    description: Restore pip and venv caches, if any.
    steps:
      - run: echo "$CACHE_VERSION" > cache_version
      - restore_cache:
          key: {{ checksum "pyproject.toml" }}-{{ checksum "cache_version"}}

      - restore_cache:
          key: pip-cache-{{ checksum "cache_version"}}

  save_project_caches:
    description: Save the pip cache and venv to the CircleCI Cache.
    steps:
      - run: echo "$CACHE_VERSION" > cache_version
      - save_cache:
          key: {{ checksum "pyproject.toml" }}-{{ checksum "cache_version"}}

          paths:
            - "/home/circleci/ci/venv"

      - save_cache:
          key: pip-cache-{{ checksum "cache_version"}}
          paths:
            - "/home/circleci/.cache/pip"

################################################################################
#                                                                              #
# Circle-CI Job definitions.                                                   #
#                                                                              #
################################################################################

jobs:

  preparation:
    <<: *job_defaults
    steps:
      - checkout
      - restore_project_caches

      - run:
          name: Create virtualenv
          command: |
            python -m venv /home/circleci/ci/venv

      - persist_to_workspace:
          paths:
            - ci
          root: "/home/circleci"

  finalize:
    steps:
      - save_caches


  # Check the source code using various linters and type checkers.
  static-checks:
    <<: *job_defaults
    steps:
      - checkout
      - lint_step

  # Run the test suite of the package.
  unit-tests:
    <<: *job_defaults
    steps:
      - checkout
      - unit_test_step

      - run:
          name: Run tests
          command: |
            tox -e unit-test

  integration-tests:
    <<: *job_defaults
    steps:
      - checkout
      - integration_test_step

  run-test-harness:
    <<: *job_defaults
    steps:
      - checkout
      - unit_test_step
      - integration_test_step

  lint-and-test:
    <<: *job_defaults
    steps:
      - checkout
      - lint_step
      - unit_test_step
      - integration_test_step

  tagging:
    <<: *job_defaults
    steps:
      - checkout
      - bump_on_merge
        name: Bumpversion on merge commits.
        command: |
          bump_on_merge.sh

################################################################################
#                                                                              #
# Circle-CI Workflow definitions.                                              #
#                                                                              #
################################################################################

workflows:

  PR-Workflow:
    <<: *ignore_master
    jobs:
      - static-checks
      - unit-tests
      - integration-tests


  Commit-Workflow:
    <<: *master_only
    jobs:
      # Run linters, checkers and test harnesses against PR branches.
      - static-checks
      - unit-tests
      - integration-tests
      - tagging
        requires:
        - static-checks
        - unit-tests
        - integration-tests
      - deploy-to-pypi:
          requires:
            - tagging
