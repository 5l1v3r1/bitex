language: python

python:
  - 3.5
  - 3.6

root: true

env:
  global:
    - IS_NIGHTLY = `[ "$TRAVIS_BRANCH" == "nightly" ] then echo 1 else echo 0`

allow_failures:
  - python: 3.5
    env: ALLOW_FAILURE=1
  - python: 3.6
    env: ALLOW_FAILURE=1

install:
  - pip install -r requirements.txt
  - pip install coverage coveralls
  - pip install pylint pydocstyle pycodestyle



# Script for the `Test` stage
script:
  - coverage run --source=bitex setup.py test
  - coveralls

jobs:
  include:
    - stage: lint
      python: 3.6
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - pylint --rcfile=pylint.rc bitex

    - stage: lint
      python: 3.6
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - pydocstyle bitex

    - stage: lint
      python: 3.6
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - pycodestyle --max-line-length=100 bitex

    - stage: compile
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script: python setup.py install

    - stage: test
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - python -m unittest -v tests/base_class_tests.py

    - stage: test
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - python -m unittest -v tests/api_tests.py

    - stage: test
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - python -m unittest -v tests/interface_tests.py

    - stage: test
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - python -m unittest -v tests/api_response_tests.py

    - stage: test
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script:
        - python -m unittest -v tests/pair_tests.py

    - stage: deploy
      python: 3.5
      env: ALLOW_FAILURE=$IS_NIGHTLY
      script: sudo bash $TRAVIS_BUILD_DIR/travis/deploy.sh

stages:
  - name: lint
    if: branch != nightly
  - name: compile
  - name: test
    if: branch != nightly
  - name: deploy
    if: tag IS present OR branch = nightly
